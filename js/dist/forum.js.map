{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@ianm/twofactor/webpack/bootstrap","webpack://@ianm/twofactor/webpack/runtime/compat get default export","webpack://@ianm/twofactor/webpack/runtime/define property getters","webpack://@ianm/twofactor/webpack/runtime/hasOwnProperty shorthand","webpack://@ianm/twofactor/webpack/runtime/make namespace object","webpack://@ianm/twofactor/external root \"flarum.core.compat['common/app']\"","webpack://@ianm/twofactor/./src/common/index.ts","webpack://@ianm/twofactor/external root \"flarum.core.compat['forum/app']\"","webpack://@ianm/twofactor/external root \"flarum.core.compat['common/extend']\"","webpack://@ianm/twofactor/external root \"flarum.core.compat['forum/components/UserSecurityPage']\"","webpack://@ianm/twofactor/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@ianm/twofactor/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@ianm/twofactor/external root \"flarum.core.compat['common/Component']\"","webpack://@ianm/twofactor/external root \"flarum.core.compat['common/components/Button']\"","webpack://@ianm/twofactor/external root \"flarum.core.compat['common/utils/ItemList']\"","webpack://@ianm/twofactor/external root \"flarum.core.compat['common/helpers/listItems']\"","webpack://@ianm/twofactor/external root \"flarum.core.compat['common/helpers/icon']\"","webpack://@ianm/twofactor/./src/forum/components/TwoFactorGridItem.tsx","webpack://@ianm/twofactor/external root \"flarum.core.compat['common/components/Tooltip']\"","webpack://@ianm/twofactor/external root \"flarum.core.compat['common/components/Modal']\"","webpack://@ianm/twofactor/external root \"flarum.core.compat['common/utils/Stream']\"","webpack://@ianm/twofactor/external root \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@ianm/twofactor/./src/forum/components/TwoFactorCodeInput.tsx","webpack://@ianm/twofactor/./src/forum/components/TwoFactorEnableModal.tsx","webpack://@ianm/twofactor/external root \"flarum.core.compat['common/helpers/username']\"","webpack://@ianm/twofactor/./src/forum/components/TwoFactorDisableConfirmModal .tsx","webpack://@ianm/twofactor/./src/forum/components/TwoFactorChangeDeviceModal.tsx","webpack://@ianm/twofactor/./src/forum/components/TwoFactorGrid.tsx","webpack://@ianm/twofactor/./src/forum/components/TwoFactorSettings.tsx","webpack://@ianm/twofactor/external root \"flarum.core.compat['common/components/FieldSet']\"","webpack://@ianm/twofactor/external root \"flarum.core.compat['common/components/LinkButton']\"","webpack://@ianm/twofactor/external root \"flarum.core.compat['forum/components/LogInModal']\"","webpack://@ianm/twofactor/external root \"flarum.core.compat['common/extenders']\"","webpack://@ianm/twofactor/external root \"flarum.core.compat['common/models/Group']\"","webpack://@ianm/twofactor/external root \"flarum.core.compat['common/models/User']\"","webpack://@ianm/twofactor/./src/common/extend.ts","webpack://@ianm/twofactor/./src/forum/extend.ts","webpack://@ianm/twofactor/./src/forum/index.ts","webpack://@ianm/twofactor/./src/forum/extendUserSecurityPage.tsx","webpack://@ianm/twofactor/./src/forum/extendLogInModal.js","webpack://@ianm/twofactor/./src/forum/checkForTwoFactor.tsx"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/app'];","import app from 'flarum/common/app';\n\napp.initializers.add('ianm/twofactor', () => {});\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/UserSecurityPage'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Component'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/ItemList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/listItems'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/icon'];","import Component, { ComponentAttrs } from 'flarum/common/Component';\nimport icon from 'flarum/common/helpers/icon';\nimport type Mithril from 'mithril';\n\nexport interface TwoFactorGridItemAttrs extends ComponentAttrs {\n  icon: string;\n  title: string;\n  value: string;\n  action?: Mithril.Children;\n  helpText?: string;\n}\n\nexport default class TwoFactorGridItem extends Component<TwoFactorGridItemAttrs> {\n  view() {\n    const { icon: iconName, title, value, action, helpText } = this.attrs;\n\n    return (\n      <li className=\"TwoFactorGrid-item\">\n        <span className=\"TwoFactorGrid-icon\">{icon(iconName)}</span>\n        <div className=\"TwoFactorGrid-content\">\n          <span className=\"TwoFactorGrid-title\">{title}</span>\n          <span className=\"TwoFactorGrid-value\">{value}</span>\n          {helpText && <span className=\"helpText TwoFactorGrid-helpText\">{helpText}</span>}\n        </div>\n        {action && <span className=\"TwoFactorGrid-actions\">{action}</span>}\n      </li>\n    );\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Tooltip'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Modal'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/Stream'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LoadingIndicator'];","import Component from 'flarum/common/Component';\nimport type Mithril from 'mithril';\n\nexport interface TwoFactorCodeInputAttrs {\n  placeholder?: string;\n  initial?: string;\n  /**\n   * Called with the entered code when either 6 digits are entered or when the user presses enter.\n   */\n  onComplete: (code: string) => void;\n}\n\nexport default class TwoFactorCodeInput extends Component<TwoFactorCodeInputAttrs> {\n  value: string = '';\n\n  oninit(vnode: Mithril.Vnode<TwoFactorCodeInputAttrs>) {\n    super.oninit(vnode);\n    this.value = vnode.attrs.initial || '';\n  }\n\n  oninput(e: Event) {\n    const target = e.target as HTMLInputElement;\n    this.value = target.value;\n\n    // Auto-submit when exactly 6 digits are entered.\n    if (this.value.length === 6) {\n      this.attrs.onComplete(this.value);\n    }\n  }\n\n  onkeydown(e: KeyboardEvent) {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      this.attrs.onComplete(this.value);\n    }\n  }\n\n  view(): Mithril.Children {\n    return (\n      <input\n        type=\"text\"\n        className=\"FormControl\"\n        value={this.value}\n        placeholder={this.attrs.placeholder || 'Enter 6-digit code'}\n        oninput={(e: Event) => this.oninput(e)}\n        onkeydown={(e: KeyboardEvent) => this.onkeydown(e)}\n        inputmode=\"numeric\"\n        pattern=\"[0-9]*\"\n        autocomplete=\"one-time-code\"\n      />\n    );\n  }\n}\n","import app from 'flarum/forum/app';\nimport Modal, { IInternalModalAttrs } from 'flarum/common/components/Modal';\nimport Button from 'flarum/common/components/Button';\nimport Stream from 'flarum/common/utils/Stream';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport User from 'flarum/common/models/User';\nimport type Mithril from 'mithril';\nimport TwoFactorCodeInput from './TwoFactorCodeInput';\n\nexport interface TwoFactorEnableModalAttrs extends IInternalModalAttrs {\n  user: User;\n  forced: boolean;\n  onEnabled: () => void | null;\n}\n\nexport default class TwoFactorEnableModal extends Modal<TwoFactorEnableModalAttrs> {\n  user!: User;\n  // Statuses: 'loading', 'displayQR', 'displayBackupCodes', 'final'\n  status: string = 'loading';\n  qrCodeUrl: string | null = null;\n  backupCodes: Array<string> = [];\n  token: Stream<string>;\n  code: string | null = null;\n  activeTab: string = 'qrcode';\n  loading: boolean = false;\n\n  protected static isDismissibleViaCloseButton: boolean = true;\n  protected static isDismissibleViaEscKey: boolean = true;\n  protected static isDismissibleViaBackdropClick: boolean = true;\n\n  oninit(vnode: Mithril.Vnode<TwoFactorEnableModalAttrs>) {\n    super.oninit(vnode);\n\n    this.user = this.attrs.user;\n\n    this.token = Stream('');\n\n    if (this.attrs.forced) {\n      TwoFactorEnableModal.isDismissibleViaCloseButton = false;\n      TwoFactorEnableModal.isDismissibleViaEscKey = false;\n      TwoFactorEnableModal.isDismissibleViaBackdropClick = false;\n    }\n  }\n\n  className() {\n    return 'TwoFactorEnableModal Modal--small';\n  }\n\n  title() {\n    return app.translator.trans('ianm-twofactor.forum.security.two_factor_heading');\n  }\n\n  oncreate(vnode: Mithril.Vnode<TwoFactorEnableModalAttrs>) {\n    super.oncreate(vnode);\n\n    const userId = this.user.id();\n    app\n      .request({\n        method: 'GET',\n        url: app.forum.attribute('apiUrl') + `/users/${userId}/twofactor/qrcode`,\n      })\n      .then((response: any) => {\n        this.qrCodeUrl = response.svg;\n        this.code = response.code;\n        this.status = 'displayQR';\n        m.redraw();\n      });\n  }\n\n  onupdate() {\n    const tokenInput = document.querySelector('.TwoFactorEnableModal [name=token]') as HTMLInputElement;\n    if (tokenInput && document.activeElement !== tokenInput) {\n      tokenInput.focus();\n    }\n  }\n\n  content() {\n    return (\n      <div className=\"Modal-body\">\n        {this.status === 'loading' && (\n          <div className=\"loading\">\n            <LoadingIndicator />\n            <p>{app.translator.trans('ianm-twofactor.forum.security.loading_qr')}</p>\n          </div>\n        )}\n\n        {this.status === 'displayQR' && (\n          <div>\n            {this.attrs.forced && (\n              <div>\n                <p>{app.translator.trans('ianm-twofactor.forum.user_2fa.alert_message')}</p>\n              </div>\n            )}\n            <div className=\"tabs\">\n              <Button\n                className={`TwoFactorModal-tab ${this.activeTab === 'qrcode' ? 'active' : ''}`}\n                onclick={() => {\n                  this.activeTab = 'qrcode';\n                  m.redraw();\n                }}\n              >\n                {app.translator.trans('ianm-twofactor.forum.security.qr_tab')}\n              </Button>\n              <Button\n                className={`TwoFactorModal-tab ${this.activeTab === 'manual' ? 'active' : ''}`}\n                onclick={() => {\n                  this.activeTab = 'manual';\n                  m.redraw();\n                }}\n              >\n                {app.translator.trans('ianm-twofactor.forum.security.manual_tab')}\n              </Button>\n            </div>\n\n            {this.activeTab === 'qrcode' && (\n              <div className=\"qrSection\">\n                <img className=\"qrImage\" src={this.qrCodeUrl} alt={app.translator.trans('ianm-twofactor.forum.security.qr_code_alt')} />\n                <p className=\"helpText\">{app.translator.trans('ianm-twofactor.forum.security.scan_qr_instruction')}</p>\n              </div>\n            )}\n\n            {this.activeTab === 'manual' && (\n              <div className=\"manualEntrySection\">\n                <code className=\"manualEntryCode\">{this.code}</code>\n                <p className=\"helpText\">{app.translator.trans('ianm-twofactor.forum.security.manual_entry_instruction')}</p>\n              </div>\n            )}\n\n            <div className=\"Form\">\n              <form onsubmit={this.onSubmit.bind(this)}>\n                <div className=\"Form-group\">\n                  <TwoFactorCodeInput\n                    placeholder={app.translator.trans('ianm-twofactor.forum.security.enter_token')}\n                    initial={this.token()}\n                    onComplete={(code: string) => {\n                      this.token(code);\n                      this.verifyToken();\n                    }}\n                  />\n                </div>\n                <div className=\"Form-group\">\n                  <Button type=\"submit\" className=\"Button Button--primary\" onclick={this.verifyToken.bind(this)} loading={this.loading}>\n                    {app.translator.trans('ianm-twofactor.forum.security.verify_button')}\n                  </Button>\n                </div>\n              </form>\n            </div>\n          </div>\n        )}\n\n        {this.status === 'displayBackupCodes' && (\n          <div>\n            <p>{app.translator.trans('ianm-twofactor.forum.security.backup_codes')}</p>\n            <ul>\n              {this.backupCodes.map((code) => (\n                <li>\n                  <code>{code}</code>\n                </li>\n              ))}\n            </ul>\n            <p>{app.translator.trans('ianm-twofactor.forum.security.backup_codes_instruction')}</p>\n            <Button\n              className=\"Button Button--primary\"\n              onclick={() => {\n                this.status = 'final';\n                m.redraw();\n              }}\n            >\n              {app.translator.trans('ianm-twofactor.forum.security.saved_backup_codes_button')}\n            </Button>\n          </div>\n        )}\n\n        {this.status === 'final' && (\n          <div>\n            <p>{app.translator.trans('ianm-twofactor.forum.security.two_factor_enabled_confirmation')}</p>\n            <Button className=\"Button Button--primary\" onclick={this.finish.bind(this)}>\n              {app.translator.trans('ianm-twofactor.forum.security.ok_button')}\n            </Button>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  verifyToken() {\n    this.loading = true;\n\n    app\n      .request({\n        method: 'POST',\n        url: app.forum.attribute('apiUrl') + '/users/twofactor/verify',\n        body: {\n          token: this.token(),\n        },\n      })\n      .then((response: unknown) => {\n        const { backupCodes } = response as { backupCodes: string[] };\n        this.backupCodes = backupCodes;\n        this.status = 'displayBackupCodes';\n        m.redraw();\n      })\n      .catch((error) => {\n        app.alerts.show({ type: 'error' }, app.translator.trans('ianm-twofactor.forum.security.verification_failed'));\n      })\n      .finally(() => {\n        this.loading = false;\n      });\n  }\n\n  finish() {\n    this.attrs.onEnabled?.();\n    this.hide();\n  }\n\n  onSubmit(e: any) {\n    e.preventDefault();\n    this.verifyToken();\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/username'];","import app from 'flarum/forum/app';\nimport Modal from 'flarum/common/components/Modal';\nimport Button from 'flarum/common/components/Button';\nimport User from 'flarum/common/models/User';\nimport { ILoginModalAttrs } from 'flarum/forum/components/LogInModal';\nimport type Mithril from 'mithril';\nimport username from 'flarum/common/helpers/username';\n\nexport interface TwoFactorDisableConfirmModalAttrs extends ILoginModalAttrs {\n  user: User;\n  onDisabled: () => void;\n}\n\nexport default class TwoFactorDisableConfirmModal extends Modal<TwoFactorDisableConfirmModalAttrs> {\n  oninit(vnode: Mithril.Vnode<TwoFactorDisableConfirmModalAttrs, this>) {\n    super.oninit(vnode);\n\n    this.loading = false;\n  }\n\n  className() {\n    return 'TwoFactorDisableConfirmModal Modal--small';\n  }\n\n  title() {\n    return app.translator.trans('ianm-twofactor.forum.security.confirm_disable_2fa_title');\n  }\n\n  content() {\n    const isSelf = app.session.user?.id() === this.attrs.user.id();\n    const thisUser = this.attrs.user;\n    return (\n      <div className=\"Modal-body\">\n        <p>\n          {app.translator.trans(\n            isSelf ? 'ianm-twofactor.forum.security.confirm_disable_2fa_text' : 'ianm-twofactor.forum.security.confirm_disable_2fa_text_other_user',\n            { username: username(thisUser) }\n          )}\n        </p>\n        <div className=\"Form-group\">\n          <Button className=\"Button Button--danger\" onclick={this.disable.bind(this)} loading={this.loading}>\n            {app.translator.trans('ianm-twofactor.forum.security.disable_2fa_button')}\n          </Button>\n          <Button className=\"Button Button--cancel\" onclick={this.hide.bind(this)}>\n            {app.translator.trans('ianm-twofactor.forum.security.cancel_button')}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  disable() {\n    this.loading = true;\n    const userId = this.attrs.user.id();\n\n    app\n      .request({\n        method: 'DELETE',\n        url: app.forum.attribute('apiUrl') + `/users/${userId}/twofactor/disable`,\n      })\n      .then(() => {\n        this.loading = false;\n        this.attrs.onDisabled();\n        this.hide();\n      })\n      .catch((error) => {\n        // Handle any errors.\n      });\n  }\n}\n","import app from 'flarum/forum/app';\nimport Modal, { IInternalModalAttrs } from 'flarum/common/components/Modal';\nimport Button from 'flarum/common/components/Button';\nimport Stream from 'flarum/common/utils/Stream';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport User from 'flarum/common/models/User';\nimport type Mithril from 'mithril';\nimport TwoFactorCodeInput from './TwoFactorCodeInput';\n\nexport interface TwoFactorChangeDeviceModalAttrs extends IInternalModalAttrs {\n  user: User;\n  onDeviceChanged?: () => void;\n}\n\nexport default class TwoFactorChangeDeviceModal extends Modal<TwoFactorChangeDeviceModalAttrs> {\n  user!: User;\n  // Statuses: 'verifyCurrentDevice', 'loadingQR', 'displayQR', 'displayBackupCodes', 'final'\n  status: string = 'verifyCurrentDevice';\n  qrCodeUrl: string | null = null;\n  backupCodes: Array<string> = [];\n  currentToken: Stream<string>;\n  newToken: Stream<string>;\n  code: string | null = null;\n  activeTab: string = 'qrcode';\n  loading: boolean = false;\n\n  oninit(vnode: Mithril.Vnode<TwoFactorChangeDeviceModalAttrs>) {\n    super.oninit(vnode);\n\n    this.user = this.attrs.user;\n    this.currentToken = Stream('');\n    this.newToken = Stream('');\n  }\n\n  className() {\n    return 'TwoFactorChangeDeviceModal Modal--small';\n  }\n\n  title() {\n    return app.translator.trans('ianm-twofactor.forum.security.change_device_heading');\n  }\n\n  onupdate() {\n    if (this.status === 'verifyCurrentDevice') {\n      const tokenInput = document.querySelector('.TwoFactorChangeDeviceModal [name=currentToken]') as HTMLInputElement;\n      if (tokenInput && document.activeElement !== tokenInput) {\n        tokenInput.focus();\n      }\n    } else if (this.status === 'displayQR') {\n      const tokenInput = document.querySelector('.TwoFactorChangeDeviceModal [name=newToken]') as HTMLInputElement;\n      if (tokenInput && document.activeElement !== tokenInput) {\n        tokenInput.focus();\n      }\n    }\n  }\n\n  content() {\n    return (\n      <div className=\"Modal-body\">\n        {this.status === 'verifyCurrentDevice' && this.renderVerifyCurrentDevice()}\n        {this.status === 'loadingQR' && this.renderLoadingQR()}\n        {this.status === 'displayQR' && this.renderDisplayQR()}\n        {this.status === 'displayBackupCodes' && this.renderBackupCodes()}\n        {this.status === 'final' && this.renderFinal()}\n      </div>\n    );\n  }\n\n  renderVerifyCurrentDevice() {\n    return (\n      <div>\n        <p>{app.translator.trans('ianm-twofactor.forum.security.verify_current_device_message')}</p>\n        <div className=\"Form\">\n          <form onsubmit={this.onVerifyCurrentDeviceSubmit.bind(this)}>\n            <div className=\"Form-group\">\n              <TwoFactorCodeInput\n                placeholder={app.translator.trans('ianm-twofactor.forum.security.enter_current_token')}\n                initial={this.currentToken()}\n                onComplete={(code: string) => {\n                  this.currentToken(code);\n                  this.verifyCurrentDevice();\n                }}\n              />\n            </div>\n            <div className=\"Form-group\">\n              <Button type=\"submit\" className=\"Button Button--primary\" loading={this.loading}>\n                {app.translator.trans('ianm-twofactor.forum.security.verify_button')}\n              </Button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n\n  renderLoadingQR() {\n    return (\n      <div className=\"loading\">\n        <LoadingIndicator />\n        <p>{app.translator.trans('ianm-twofactor.forum.security.loading_qr')}</p>\n      </div>\n    );\n  }\n\n  renderDisplayQR() {\n    return (\n      <div>\n        <p>{app.translator.trans('ianm-twofactor.forum.security.scan_new_device_qr')}</p>\n        <div className=\"tabs\">\n          <Button\n            className={`TwoFactorModal-tab ${this.activeTab === 'qrcode' ? 'active' : ''}`}\n            onclick={() => {\n              this.activeTab = 'qrcode';\n              m.redraw();\n            }}\n          >\n            {app.translator.trans('ianm-twofactor.forum.security.qr_tab')}\n          </Button>\n          <Button\n            className={`TwoFactorModal-tab ${this.activeTab === 'manual' ? 'active' : ''}`}\n            onclick={() => {\n              this.activeTab = 'manual';\n              m.redraw();\n            }}\n          >\n            {app.translator.trans('ianm-twofactor.forum.security.manual_tab')}\n          </Button>\n        </div>\n\n        {this.activeTab === 'qrcode' && (\n          <div className=\"qrSection\">\n            <img className=\"qrImage\" src={this.qrCodeUrl} alt={app.translator.trans('ianm-twofactor.forum.security.qr_code_alt')} />\n          </div>\n        )}\n\n        {this.activeTab === 'manual' && (\n          <div className=\"manualEntrySection\">\n            <code className=\"manualEntryCode\">{this.code}</code>\n            <p className=\"helpText\">{app.translator.trans('ianm-twofactor.forum.security.manual_entry_instruction')}</p>\n          </div>\n        )}\n\n        <p>{app.translator.trans('ianm-twofactor.forum.security.verify_new_device_message')}</p>\n        <div className=\"Form\">\n          <form onsubmit={this.onVerifyNewDeviceSubmit.bind(this)}>\n            <div className=\"Form-group\">\n              <TwoFactorCodeInput\n                placeholder={app.translator.trans('ianm-twofactor.forum.security.enter_new_token')}\n                initial={this.newToken()}\n                onComplete={(code: string) => {\n                  this.newToken(code);\n                  this.verifyNewDevice();\n                }}\n              />\n            </div>\n            <div className=\"Form-group\">\n              <Button type=\"submit\" className=\"Button Button--primary\" loading={this.loading}>\n                {app.translator.trans('ianm-twofactor.forum.security.verify_button')}\n              </Button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n\n  renderBackupCodes() {\n    return (\n      <div>\n        <p>{app.translator.trans('ianm-twofactor.forum.security.new_backup_codes')}</p>\n        <ul>\n          {this.backupCodes.map((code) => (\n            <li>\n              <code>{code}</code>\n            </li>\n          ))}\n        </ul>\n        <p>{app.translator.trans('ianm-twofactor.forum.security.backup_codes_instruction')}</p>\n        <Button\n          className=\"Button Button--primary\"\n          onclick={() => {\n            this.status = 'final';\n            m.redraw();\n          }}\n        >\n          {app.translator.trans('ianm-twofactor.forum.security.saved_backup_codes_button')}\n        </Button>\n      </div>\n    );\n  }\n\n  renderFinal() {\n    return (\n      <div>\n        <p>{app.translator.trans('ianm-twofactor.forum.security.device_changed_confirmation')}</p>\n        <Button className=\"Button Button--primary\" onclick={this.finish.bind(this)}>\n          {app.translator.trans('ianm-twofactor.forum.security.continue_button')}\n        </Button>\n      </div>\n    );\n  }\n\n  onVerifyCurrentDeviceSubmit(e: Event) {\n    e.preventDefault();\n    this.verifyCurrentDevice();\n  }\n\n  verifyCurrentDevice() {\n    this.loading = true;\n\n    app\n      .request({\n        method: 'POST',\n        url: app.forum.attribute('apiUrl') + '/users/twofactor/verify-current',\n        body: {\n          token: this.currentToken(),\n        },\n      })\n      .then(() => {\n        this.status = 'loadingQR';\n        m.redraw();\n        this.loadQrCode();\n      })\n      .catch((error) => {\n        this.loading = false;\n        m.redraw();\n      });\n  }\n\n  loadQrCode() {\n    const userId = this.user.id();\n    app\n      .request({\n        method: 'GET',\n        url: app.forum.attribute('apiUrl') + `/users/${userId}/twofactor/change-device/qrcode`,\n      })\n      .then((response: any) => {\n        this.qrCodeUrl = response.svg;\n        this.code = response.code;\n        this.status = 'displayQR';\n        this.loading = false;\n        m.redraw();\n      })\n      .catch(() => {\n        this.loading = false;\n        m.redraw();\n      });\n  }\n\n  onVerifyNewDeviceSubmit(e: Event) {\n    e.preventDefault();\n    this.verifyNewDevice();\n  }\n\n  verifyNewDevice() {\n    this.loading = true;\n\n    app\n      .request({\n        method: 'POST',\n        url: app.forum.attribute('apiUrl') + '/users/twofactor/change-device/verify',\n        body: {\n          token: this.newToken(),\n        },\n      })\n      .then((response: any) => {\n        const { backupCodes } = response as { backupCodes: string[] };\n        this.backupCodes = backupCodes;\n        this.status = 'displayBackupCodes';\n        this.loading = false;\n        m.redraw();\n      })\n      .catch(() => {\n        this.loading = false;\n        m.redraw();\n      });\n  }\n\n  finish() {\n    this.attrs.onDeviceChanged?.();\n    this.hide();\n  }\n}\n","import app from 'flarum/forum/app';\nimport Component, { ComponentAttrs } from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport listItems from 'flarum/common/helpers/listItems';\nimport TwoFactorGridItem from './TwoFactorGridItem';\nimport Tooltip from 'flarum/common/components/Tooltip';\nimport TwoFactorEnableModal from './TwoFactorEnableModal';\nimport TwoFactorDisableConfirmModal from './TwoFactorDisableConfirmModal ';\nimport TwoFactorChangeDeviceModal from './TwoFactorChangeDeviceModal';\nimport type Mithril from 'mithril';\nimport User from 'flarum/common/models/User';\n\nexport interface TwoFactorGridAttrs extends ComponentAttrs {\n  user: User;\n}\n\nexport default class TwoFactorGrid extends Component<TwoFactorGridAttrs> {\n  user!: User;\n  twoFactorEnabled!: boolean;\n  canDisableTwoFactor!: boolean;\n  backupCodesRemaining!: number;\n\n  oninit(vnode: Mithril.Vnode<ComponentAttrs, this>) {\n    super.oninit(vnode);\n\n    this.user = this.attrs.user;\n    this.twoFactorEnabled = this.user.twoFactorEnabled();\n    this.canDisableTwoFactor = this.user.canDisable2FA();\n    this.backupCodesRemaining = this.user.backupCodesRemaining() || 0;\n  }\n\n  view() {\n    return (\n      <div className=\"TwoFactorGrid\">\n        <ul>{listItems(this.twoFactorItems().toArray())}</ul>\n      </div>\n    );\n  }\n\n  twoFactorItems() {\n    const items = new ItemList();\n\n    const disableAction = this.getDisableAction();\n    const enableAction = (\n      <Button className=\"Button Button--primary\" onclick={this.enableTwoFactor.bind(this)}>\n        {app.translator.trans('ianm-twofactor.forum.security.enable_2fa_button')}\n      </Button>\n    );\n\n    items.add(\n      'status',\n      <TwoFactorGridItem\n        icon=\"fas fa-shield-alt\"\n        title={app.translator.trans('ianm-twofactor.forum.security.two_factor_title')}\n        value={\n          this.twoFactorEnabled\n            ? app.translator.trans('ianm-twofactor.forum.security.two_factor_enabled')\n            : app.translator.trans('ianm-twofactor.forum.security.two_factor_disabled')\n        }\n        action={this.twoFactorEnabled ? disableAction : enableAction}\n        helpText={!this.canDisableTwoFactor && app.translator.trans('ianm-twofactor.forum.security.cannot_disable')}\n      />\n    );\n\n    // Only continue to add other items if Two Factor Authentication is enabled\n    if (!this.twoFactorEnabled) return items;\n\n    // Add change device option\n    items.add(\n      'changeDevice',\n      <TwoFactorGridItem\n        icon=\"fas fa-mobile-alt\"\n        title={app.translator.trans('ianm-twofactor.forum.security.change_device_title')}\n        value={app.translator.trans('ianm-twofactor.forum.security.change_device_description')}\n        action={\n          <Button className=\"Button\" onclick={this.changeDevice.bind(this)}>\n            {app.translator.trans('ianm-twofactor.forum.security.change_device_button')}\n          </Button>\n        }\n      />\n    );\n\n    items.add(\n      'backupCodes',\n      <TwoFactorGridItem\n        icon=\"fas fa-key\"\n        title={app.translator.trans('ianm-twofactor.forum.security.backup_codes_remaining')}\n        value={this.backupCodesRemaining}\n        // action={\n        //   this.backupCodesRemaining < 2 ? (\n        //     <Button className=\"Button Button--primary\" onclick={this.generateBackupCodes.bind(this)}>\n        //       {app.translator.trans('ianm-twofactor.forum.security.generate_backup_codes_button')}\n        //     </Button>\n        //   ) : null\n        // }\n      />\n    );\n\n    // Add other items as needed\n\n    return items;\n  }\n\n  getDisableAction() {\n    const disableButton = (\n      <Button className=\"Button Button--danger\" onclick={this.disableTwoFactor.bind(this)} disabled={!this.canDisableTwoFactor}>\n        {app.translator.trans('ianm-twofactor.forum.security.disable_2fa_button')}\n      </Button>\n    );\n\n    return !this.canDisableTwoFactor ? (\n      <Tooltip text={app.translator.trans('ianm-twofactor.forum.security.cannot_disable_tooltip')}>{disableButton}</Tooltip>\n    ) : (\n      disableButton\n    );\n  }\n\n  enableTwoFactor() {\n    app.modal.show(TwoFactorEnableModal, { onEnabled: this.onTwoFactorEnabled.bind(this), user: this.user });\n  }\n\n  onTwoFactorEnabled() {\n    this.twoFactorEnabled = true;\n    m.redraw();\n  }\n\n  disableTwoFactor() {\n    app.modal.show(TwoFactorDisableConfirmModal, { onDisabled: this.onTwoFactorDisabled.bind(this), user: this.user });\n  }\n\n  onTwoFactorDisabled() {\n    this.twoFactorEnabled = false;\n    m.redraw();\n  }\n\n  changeDevice() {\n    app.modal.show(TwoFactorChangeDeviceModal, {\n      user: this.user,\n      onDeviceChanged: this.onDeviceChanged.bind(this),\n    });\n  }\n\n  onDeviceChanged() {\n    // Refresh backup codes count if needed\n    this.backupCodesRemaining = this.user.backupCodesRemaining() || 0;\n    m.redraw();\n  }\n\n  generateBackupCodes() {\n    // Logic to generate more backup codes\n    // Update this.backupCodesRemaining accordingly\n    m.redraw();\n  }\n}\n","import app from 'flarum/forum/app';\nimport Component, { ComponentAttrs } from 'flarum/common/Component';\nimport TwoFactorGrid from './TwoFactorGrid';\nimport type Mithril from 'mithril';\nimport User from 'flarum/common/models/User';\n\nexport interface TwoFactorSettingsAttrs extends ComponentAttrs {\n  user: User;\n}\n\nexport default class TwoFactorSettings extends Component<TwoFactorSettingsAttrs> {\n  oninit(vnode: Mithril.Vnode<ComponentAttrs, this>) {\n    super.oninit(vnode);\n\n    // this.twoFactorEnabled = this.attrs.user.twoFactorEnabled();\n    // this.canDisableTwoFactor = this.attrs.user.canDisable2FA();\n    // this.loading = false;\n  }\n\n  view() {\n    return (\n      <div>\n        <TwoFactorGrid user={this.attrs.user} />\n      </div>\n    );\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/FieldSet'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LinkButton'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/LogInModal'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extenders'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/Group'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/User'];","import Extend from 'flarum/common/extenders';\nimport Group from 'flarum/common/models/Group';\nimport User from 'flarum/common/models/User';\n\nexport default [\n  new Extend.Model(User) //\n    .attribute<boolean>('twoFactorEnabled')\n    .attribute<boolean>('canDisable2FA')\n    .attribute<boolean>('mustEnable2FA')\n    .attribute<number>('backupCodesRemaining'),\n\n  new Extend.Model(Group) //\n    .attribute<boolean>('requires2FA'),\n];\n","import commonExtend from '../common/extend';\n\nexport default [...commonExtend];\n","import app from 'flarum/forum/app';\nimport extendUserSecurityPage from './extendUserSecurityPage';\nimport extendLogInModal from './extendLogInModal';\nimport checkForTwoFactor from './checkForTwoFactor';\n\nexport { default as extend } from './extend';\n\napp.initializers.add('ianm/twofactor', () => {\n  extendUserSecurityPage();\n  extendLogInModal();\n  checkForTwoFactor();\n});\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport UserSecurityPage from 'flarum/forum/components/UserSecurityPage';\nimport TwoFactorSettings from './components/TwoFactorSettings';\nimport FieldSet from 'flarum/common/components/FieldSet';\nimport LinkButton from 'flarum/common/components/LinkButton';\n\nexport default function extendUserSecurityPage() {\n  extend(UserSecurityPage.prototype, 'settingsItems', function (items) {\n    items.add(\n      'twoFactor',\n      <FieldSet label={app.translator.trans('ianm-twofactor.forum.security.two_factor_heading')}>\n        <p className=\"helpText\">{app.translator.trans('ianm-twofactor.forum.security.two_factor_help')}</p>\n        <p className=\"helpText\">\n          {app.translator.trans('ianm-twofactor.forum.security.two_factor_apps', {\n            google: (\n              <LinkButton\n                external={true}\n                href=\"https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Google Authenticator\n              </LinkButton>\n            ),\n            microsoft: (\n              <LinkButton external={true} href=\"https://www.microsoft.com/en-us/account/authenticator\" target=\"_blank\" rel=\"noopener noreferrer\">\n                Microsoft Authenticator\n              </LinkButton>\n            ),\n            authy: (\n              <LinkButton external={true} href=\"https://authy.com/download/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                Authy\n              </LinkButton>\n            ),\n          })}\n        </p>\n        <TwoFactorSettings user={this.user} />\n      </FieldSet>,\n      100\n    );\n  });\n}\n","import app from 'flarum/forum/app';\nimport { extend, override } from 'flarum/common/extend';\nimport LogInModal from 'flarum/forum/components/LogInModal';\nimport Stream from 'flarum/common/utils/Stream';\n\nexport default function extendLogInModal() {\n  extend(LogInModal.prototype, 'oninit', function (vnode) {\n    // Initialize the 2FA token stream\n    this.twoFactorToken = Stream('');\n    this.twoFactorRequired = false;\n  });\n\n  extend(LogInModal.prototype, 'fields', function (items) {\n    // Add the 2FA input field to the form\n    if (this.twoFactorRequired) {\n      items.add(\n        'twoFactor',\n        <div className=\"Form-group TwoFactorInput\">\n          <legend>{app.translator.trans('ianm-twofactor.forum.log_in.two_factor_required_message')}</legend>\n          <input\n            className=\"FormControl\"\n            name=\"twoFactorToken\"\n            type=\"text\"\n            placeholder={app.translator.trans('ianm-twofactor.forum.log_in.two_factor_placeholder')}\n            value={this.twoFactorToken()}\n            disabled={this.loading}\n            inputmode=\"numeric\"\n            pattern=\"[0-9]*\"\n            autocomplete=\"one-time-code\"\n            oninput={(e) => {\n              this.twoFactorToken(e.currentTarget.value);\n\n              if (e.target.value.length === 6) {\n                this.onsubmit(new Event('submit')); // Trigger the onsubmit method\n              }\n            }}\n          />\n        </div>,\n        19\n      );\n\n      items.remove('identification');\n      items.remove('password');\n      items.remove('remember');\n    }\n  });\n\n  extend(LogInModal.prototype, 'loginParams', function (data) {\n    // Add the twoFactorToken to the login params\n    data.twoFactorToken = this.twoFactorToken();\n\n    return data;\n  });\n\n  override(LogInModal.prototype, 'body', function (original) {\n    if (this.twoFactorRequired) {\n      return <div className=\"Form Form--centered\">{this.fields().toArray()}</div>;\n    }\n\n    return original();\n  });\n\n  override(LogInModal.prototype, 'footer', function (original) {\n    if (this.twoFactorRequired) {\n      return <div />;\n    }\n\n    return original();\n  });\n\n  override(LogInModal.prototype, 'onerror', function (original, error) {\n    if (error.status === 422) {\n      const errors = error.response && error.response.errors;\n      const firstErrorDetail = (errors && errors[0] && errors[0].detail) || '';\n\n      if (firstErrorDetail.includes('two_factor_required')) {\n        // If the error indicates that 2FA is required, show the 2FA input field\n        this.twoFactorRequired = true;\n      } else {\n        // Handle other types of 422 errors here\n        error.alert.content = app.translator.trans('core.forum.log_in.invalid_login_message');\n        this.alertAttrs = error.alert;\n      }\n      m.redraw();\n      this.onready();\n    } else {\n      original(error);\n    }\n  });\n}\n","import app from 'flarum/forum/app';\nimport TwoFactorEnableModal from './components/TwoFactorEnableModal';\n\nexport default function checkForTwoFactor() {\n  return new Promise(() => {\n    setTimeout(() => {\n      if (app.session.user?.mustEnable2FA()) {\n        app.modal.show(TwoFactorEnableModal, { user: app.session.user, forced: true });\n      }\n    }, 300);\n  });\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","app","add","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","_inheritsLoose","subClass","superClass","create","constructor","TwoFactorGridItem","_Component","apply","arguments","view","_this$attrs","this","attrs","iconName","icon","title","action","helpText","m","className","Component","TwoFactorCodeInput","_this","_len","length","args","Array","_key","concat","_proto","oninit","vnode","initial","oninput","e","target","onComplete","onkeydown","preventDefault","_this2","type","placeholder","inputmode","pattern","autocomplete","TwoFactorEnableModal","_Modal","user","status","qrCodeUrl","backupCodes","token","code","activeTab","loading","Stream","forced","isDismissibleViaCloseButton","isDismissibleViaEscKey","isDismissibleViaBackdropClick","trans","oncreate","userId","id","method","url","attribute","then","response","svg","redraw","onupdate","tokenInput","document","querySelector","activeElement","focus","content","_this3","LoadingIndicator","Button","onclick","src","alt","onsubmit","onSubmit","verifyToken","map","finish","_this4","body","error","show","_this$attrs$onEnabled","onEnabled","hide","Modal","TwoFactorDisableConfirmModal","_app$session$user","isSelf","thisUser","username","disable","onDisabled","TwoFactorChangeDeviceModal","currentToken","newToken","renderVerifyCurrentDevice","renderLoadingQR","renderDisplayQR","renderBackupCodes","renderFinal","onVerifyCurrentDeviceSubmit","verifyCurrentDevice","onVerifyNewDeviceSubmit","verifyNewDevice","_this5","loadQrCode","_this6","_this7","_this$attrs$onDeviceC","onDeviceChanged","TwoFactorGrid","twoFactorEnabled","canDisableTwoFactor","backupCodesRemaining","canDisable2FA","listItems","twoFactorItems","toArray","items","ItemList","disableAction","getDisableAction","enableAction","enableTwoFactor","changeDevice","disableButton","disableTwoFactor","disabled","Tooltip","text","onTwoFactorEnabled","onTwoFactorDisabled","generateBackupCodes","TwoFactorSettings","Extend","User","Group","commonExtend","extend","UserSecurityPage","FieldSet","label","google","LinkButton","external","href","rel","microsoft","authy","LogInModal","twoFactorToken","twoFactorRequired","name","currentTarget","Event","remove","data","override","original","fields","errors","detail","includes","alert","alertAttrs","onready","Promise","setTimeout","mustEnable2FA"],"sourceRoot":""}